@model ListenAndWrite.Models.audio

@{
    ViewBag.Title = "ThemMoi";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}

<h2>Thêm Audio mới</h2>
@using (Html.BeginForm("ThemMoi", "QuanLyAudio", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>audio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @*<div class="form-group">
                @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Name của thẻ input file phải trùng tên với tham số bên controller*@
                <input type="file" name="fileUpload">
                @*Thông báo trùng*@
                @ViewBag.ThongBao
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @style = "width:700px" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.text, new { htmlAttributes = new { @class = "form-control", @style = "width:700px" } })
                @Html.ValidationMessageFor(model => model.text, "", new { @class = "text-danger" })
            </div>
        </div>
         <br />
        <div class="form-group">
            @Html.LabelFor(model => model.idChuDe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idChuDe")
                @Html.ValidationMessageFor(model => model.idChuDe, "", new { @class = "text-danger"})
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
